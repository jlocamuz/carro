version: "3"
   
services:
  proxy:
    image: nginx
    ports:
      - "8080:8080"
    volumes:
      - ./app-nginx.conf:/etc/nginx/conf.d/app-nginx.conf
    depends_on:
      - products
      - shopping_cart
  db:
    image: postgres
    container_name: db
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres



  products:
    build: 
      context: .
      dockerfile: products-dockerfile
    container_name: products
    command: bash -c "python ./products/manage.py makemigrations micro1 && python ./products/manage.py migrate && python ./products/manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code_products
    ports:
      - "9999:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db

  shopping_cart:
    build: 
      context: .
      dockerfile: shoppingcart-dockerfile
    container_name: shopping_cart
    command: bash -c "python ./shopping_cart/manage.py makemigrations micro1 && python ./shopping_cart/manage.py migrate && python ./shopping_cart/manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code_shopping_cart
    ports:
      - "8000:8000"

  frontend:
    build:
      context: .
      dockerfile: react-dockerfile
    command: bash -c "npm install && npm start"
    ports:
      - "3000:3000"
    # volumes:
    #   - ./ecommerce-frontend/src:/ecommerce-frontend/src:cached
    depends_on:
      - products
      - shopping_cart